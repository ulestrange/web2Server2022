###
POST http://localhost:3000/users HTTP/1.1
content-type: application/json

{ "username": "user10",
"email" : "una@here.ie",
"password" : "password10"}

### login

POST http://localhost:3000/auth/local HTTP/1.1
content-type: application/json

{ "username": "use4",
"password" : "password1"}

###
GET http://localhost:3000/users HTTP/1.1



###
## this should fail with 404 as is on the collection not an individual
DELETE http://localhost:3000/books HTTP/1.1

###
# should return an array of books - the whole collection
GET http://localhost:3000/books HTTP/1.1


###
#### test the collection filtering on title
## expected result an array contains those books whose title inlcudes the word war
GET http://localhost:3000/books?title=war HTTP/1.1


###
# returns a collection of those books with year_written = 2022

GET http://localhost:3000/books?year=2022 HTTP/1.1

########################
###GET an individual book
## Expected result depends on whether the ID is in the collection if so an individual book is
## returned if not a 404 not found
GET http://localhost:3000/books/63340cde5def8f9f17677bd8 HTTP/1.1

###
### POST Request for a book with just a title
## expeted result 201 Created with the id of the book in location and a book returned.
POST http://localhost:3000/books HTTP/1.1
content-type: application/json

{ "title" : "a new book"}

###
### POST Request for a book with no title -
## 400 with some JOI details inculding the title is required
POST http://localhost:3000/books HTTP/1.1
content-type: application/json

{ "year_written": 2022}

###
### POST Request for a book with a title - but a string for a year - this should fail
## 400 with a message about year_written not being a number
POST http://localhost:3000/books HTTP/1.1
content-type: application/json

{ "year_written": "this year",
"title" : "The BEST"}

###
# comment goes here - will fail with 404 as on collection

PUT http://localhost:3000/books/63340cde5def8f9f17677bd8 HTTP/1.1
content-type: application/json

{ "year_written": 2036,
"title" : "2035"}

